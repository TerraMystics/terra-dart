syntax = "proto3";

package ibc.lightclients.tendermint.v1;

option go_package = "github.com/cosmos/ibc-go/modules/light-clients/07-tendermint/types";

import "google/protobuf/descriptor.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
message ClientState {
  option (goproto_getters) = false;

  string   chain_id    = 1;
  Fraction trust_level = 2 [(nullable) = false, (moretags) = "yaml:\"trust_level\""];
  // duration of the period since the LastestTimestamp during which the
  // submitted headers are valid for upgrade
  google.protobuf.Duration trusting_period = 3
      [(nullable) = false, (stdduration) = true, (moretags) = "yaml:\"trusting_period\""];
  // duration of the staking unbonding period
  google.protobuf.Duration unbonding_period = 4 [
    (nullable)    = false,
    (stdduration) = true,
    (moretags)    = "yaml:\"unbonding_period\""
  ];
  // defines how much new (untrusted) header's Time can drift into the future.
  google.protobuf.Duration max_clock_drift = 5
      [(nullable) = false, (stdduration) = true, (moretags) = "yaml:\"max_clock_drift\""];
  // Block height when the client was frozen due to a misbehaviour
  Height frozen_height = 6
      [(nullable) = false, (moretags) = "yaml:\"frozen_height\""];
  // Latest height the client was updated to
  Height latest_height = 7
      [(nullable) = false, (moretags) = "yaml:\"latest_height\""];

  // Proof specifications used in verifying counterparty state
  repeated ProofSpec proof_specs = 8 [(moretags) = "yaml:\"proof_specs\""];

  // Path at which next upgraded client will be committed.
  // Each element corresponds to the key for a single CommitmentProof in the
  // chained proof. NOTE: ClientState must stored under
  // `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
  // under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
  // the default upgrade module, upgrade_path should be []string{"upgrade",
  // "upgradedIBCState"}`
  repeated string upgrade_path = 9 [(moretags) = "yaml:\"upgrade_path\""];

  // This flag, when set to true, will allow governance to recover a client
  // which has expired
  bool allow_update_after_expiry = 10 [(moretags) = "yaml:\"allow_update_after_expiry\""];
  // This flag, when set to true, will allow governance to unfreeze a client
  // whose chain has experienced a misbehaviour event
  bool allow_update_after_misbehaviour = 11 [(moretags) = "yaml:\"allow_update_after_misbehaviour\""];
}

// ConsensusState defines the consensus state from Tendermint.
message ConsensusState {
  option (goproto_getters) = false;

  // timestamp that corresponds to the block height in which the ConsensusState
  // was stored.
  google.protobuf.Timestamp timestamp = 1 [(nullable) = false, (stdtime) = true];
  // commitment root (i.e app hash)
  MerkleRoot root                 = 2 [(nullable) = false];
  bytes                             next_validators_hash = 3 [
    (casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes",
    (moretags) = "yaml:\"next_validators_hash\""
  ];
}

// Misbehaviour is a wrapper over two conflicting Headers
// that implements Misbehaviour interface expected by ICS-02
message Misbehaviour {
  option (goproto_getters) = false;

  string client_id = 1 [(moretags) = "yaml:\"client_id\""];
  Header header_1  = 2 [(customname) = "Header1", (moretags) = "yaml:\"header_1\""];
  Header header_2  = 3 [(customname) = "Header2", (moretags) = "yaml:\"header_2\""];
}

// Header defines the Tendermint client consensus Header.
// It encapsulates all the information necessary to update from a trusted
// Tendermint ConsensusState. The inclusion of TrustedHeight and
// TrustedValidators allows this update to process correctly, so long as the
// ConsensusState for the TrustedHeight exists, this removes race conditions
// among relayers The SignedHeader and ValidatorSet are the new untrusted update
// fields for the client. The TrustedHeight is the height of a stored
// ConsensusState on the client that will be used to verify the new untrusted
// header. The Trusted ConsensusState must be within the unbonding period of
// current time in order to correctly verify, and the TrustedValidators must
// hash to TrustedConsensusState.NextValidatorsHash since that is the last
// trusted validator set at the TrustedHeight.
message Header {
 SignedHeader signed_header = 1
      [(embed) = true, (moretags) = "yaml:\"signed_header\""];

  ValidatorSet validator_set  = 2 [(moretags) = "yaml:\"validator_set\""];
  Height      trusted_height = 3
      [(nullable) = false, (moretags) = "yaml:\"trusted_height\""];
  ValidatorSet trusted_validators = 4 [(moretags) = "yaml:\"trusted_validators\""];
}

// Fraction defines the protobuf message type for tmmath.Fraction that only
// supports positive values.
message Fraction {
  uint64 numerator   = 1;
  uint64 denominator = 2;
}










message SignedHeader{}
message Height{}
message ValidatorSet{}
message MerkleRoot{}
message ProofSpec{}




extend google.protobuf.EnumOptions {
	optional bool goproto_enum_prefix = 62001;
	optional bool goproto_enum_stringer = 62021;
	optional bool enum_stringer = 62022;
	optional string enum_customname = 62023;
	optional bool enumdecl = 62024;
}

extend google.protobuf.EnumValueOptions {
	optional string enumvalue_customname = 66001;
}

extend google.protobuf.FileOptions {
	optional bool goproto_getters_all = 63001;
	optional bool goproto_enum_prefix_all = 63002;
	optional bool goproto_stringer_all = 63003;
	optional bool verbose_equal_all = 63004;
	optional bool face_all = 63005;
	optional bool gostring_all = 63006;
	optional bool populate_all = 63007;
	optional bool stringer_all = 63008;
	optional bool onlyone_all = 63009;

	optional bool equal_all = 63013;
	optional bool description_all = 63014;
	optional bool testgen_all = 63015;
	optional bool benchgen_all = 63016;
	optional bool marshaler_all = 63017;
	optional bool unmarshaler_all = 63018;
	optional bool stable_marshaler_all = 63019;

	optional bool sizer_all = 63020;

	optional bool goproto_enum_stringer_all = 63021;
	optional bool enum_stringer_all = 63022;

	optional bool unsafe_marshaler_all = 63023;
	optional bool unsafe_unmarshaler_all = 63024;

	optional bool goproto_extensions_map_all = 63025;
	optional bool goproto_unrecognized_all = 63026;
	optional bool gogoproto_import = 63027;
	optional bool protosizer_all = 63028;
	optional bool compare_all = 63029;
    optional bool typedecl_all = 63030;
    optional bool enumdecl_all = 63031;

	optional bool goproto_registration = 63032;
	optional bool messagename_all = 63033;

	optional bool goproto_sizecache_all = 63034;
	optional bool goproto_unkeyed_all = 63035;
}

extend google.protobuf.MessageOptions {
	optional bool goproto_getters = 64001;
	optional bool goproto_stringer = 64003;
	optional bool verbose_equal = 64004;
	optional bool face = 64005;
	optional bool gostring = 64006;
	optional bool populate = 64007;
	optional bool stringer = 67008;
	optional bool onlyone = 64009;

	optional bool equal = 64013;
	optional bool description = 64014;
	optional bool testgen = 64015;
	optional bool benchgen = 64016;
	optional bool marshaler = 64017;
	optional bool unmarshaler = 64018;
	optional bool stable_marshaler = 64019;

	optional bool sizer = 64020;

	optional bool unsafe_marshaler = 64023;
	optional bool unsafe_unmarshaler = 64024;

	optional bool goproto_extensions_map = 64025;
	optional bool goproto_unrecognized = 64026;

	optional bool protosizer = 64028;
	optional bool compare = 64029;

	optional bool typedecl = 64030;

	optional bool messagename = 64033;

	optional bool goproto_sizecache = 64034;
	optional bool goproto_unkeyed = 64035;
}

extend google.protobuf.FieldOptions {
	optional bool nullable = 65001;
	optional bool embed = 65002;
	optional string customtype = 65003;
	optional string customname = 65004;
	optional string jsontag = 65005;
	optional string moretags = 65006;
	optional string casttype = 65007;
	optional string castkey = 65008;
	optional string castvalue = 65009;

	optional bool stdtime = 65010;
	optional bool stdduration = 65011;
	optional bool wktpointer = 65012;

	optional string castrepeated = 65013;
}
